'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

function createContext() {
  let currentInstance = null;
  return {
    use: () => currentInstance,
    call: (instance, cb) => {
      if (currentInstance && currentInstance !== instance) {
        throw new Error("Context conflict");
      }
      currentInstance = instance;
      const res = cb();
      currentInstance = null;
      return res;
    }
  };
}
function createNamespace() {
  const contexts = {};
  return {
    get(key) {
      if (!contexts[key]) {
        contexts[key] = createContext();
      }
      return contexts[key];
    }
  };
}
const _globalThis = typeof globalThis !== "undefined" ? globalThis : typeof self !== "undefined" ? self : typeof global !== "undefined" ? global : typeof window !== "undefined" ? window : {};
const globalKey = "__unctx__";
const defaultNamespace = _globalThis[globalKey] || (_globalThis[globalKey] = createNamespace());
const getContext = (key) => defaultNamespace.get(key);
const useContext = (key) => getContext(key).use;

exports.createContext = createContext;
exports.createNamespace = createNamespace;
exports.defaultNamespace = defaultNamespace;
exports.getContext = getContext;
exports.useContext = useContext;
